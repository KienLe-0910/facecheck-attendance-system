import os
import cv2
import face_recognition
import sqlite3
import pickle
import numpy as np

# ƒê∆∞·ªùng d·∫´n database
db_path = "project-03/data/attendance.db"

# K·∫øt n·ªëi database
conn = sqlite3.connect(db_path)
cursor = conn.cursor()

# M·ªü webcam
cap = cv2.VideoCapture(0)
print("üì∏ Vui l√≤ng nh√¨n th·∫≥ng v√†o camera ƒë·ªÉ ƒëi·ªÉm danh...")

while True:
    ret, frame = cap.read()
    if not ret:
        print("‚ùå L·ªói khi m·ªü webcam!")
        break

    cv2.imshow("Qu√©t khu√¥n m·∫∑t ƒë·ªÉ ƒëi·ªÉm danh", frame)
    key = cv2.waitKey(1) & 0xFF

    # Nh·∫•n 's' ƒë·ªÉ ch·ª•p ·∫£nh v√† nh·∫≠n di·ªán
    if key == ord("s"):
        image_path = "project-03/data/temp_attendance.jpg"
        cv2.imwrite(image_path, frame)
        print("‚úÖ ·∫¢nh ƒë√£ ch·ª•p! ƒêang x·ª≠ l√Ω nh·∫≠n di·ªán...")
        break

cap.release()
cv2.destroyAllWindows()

# Load ·∫£nh v√† m√£ h√≥a khu√¥n m·∫∑t
image = face_recognition.load_image_file(image_path)
face_encodings = face_recognition.face_encodings(image)

if len(face_encodings) > 0:
    encoding_to_check = face_encodings[0]

    # L·∫•y d·ªØ li·ªáu m√£ h√≥a khu√¥n m·∫∑t t·ª´ database
    cursor.execute("SELECT student_id, encoding FROM face_encodings")
    data = cursor.fetchall()

    for student_id, encoding_blob in data:
        stored_encoding = pickle.loads(encoding_blob)  # Gi·∫£i m√£ d·ªØ li·ªáu t·ª´ blob

        # So s√°nh khu√¥n m·∫∑t
        results = face_recognition.compare_faces([stored_encoding], encoding_to_check, tolerance=0.5)

        if results[0]:  # N·∫øu tr√πng kh·ªõp
            cursor.execute("SELECT name FROM students WHERE id=?", (student_id,))
            student_name = cursor.fetchone()[0]

            # L∆∞u v√†o b·∫£ng ƒëi·ªÉm danh
            cursor.execute("INSERT INTO attendance (student_id, name) VALUES (?, ?)", (student_id, student_name))
            conn.commit()

            print(f"‚úÖ ƒêi·ªÉm danh th√†nh c√¥ng: {student_name} (ID: {student_id})")
            break
    else:
        print("‚ùå Kh√¥ng t√¨m th·∫•y sinh vi√™n trong h·ªá th·ªëng!")
else:
    print("‚ùå Kh√¥ng t√¨m th·∫•y khu√¥n m·∫∑t trong ·∫£nh!")

conn.close()
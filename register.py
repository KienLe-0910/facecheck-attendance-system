import os
import cv2
import face_recognition
import sqlite3
import pickle
import numpy as np

# ƒê∆∞·ªùng d·∫´n database
db_path = "project-03/data/attendance.db"

# K·∫øt n·ªëi database
conn = sqlite3.connect(db_path)
cursor = conn.cursor()

# Nh·∫≠p th√¥ng tin sinh vi√™n
student_id = input("Nh·∫≠p ID sinh vi√™n: ")
student_name = input("Nh·∫≠p t√™n sinh vi√™n: ")

# Ki·ªÉm tra xem ID ƒë√£ t·ªìn t·∫°i ch∆∞a
cursor.execute("SELECT * FROM students WHERE id=?", (student_id,))
if cursor.fetchone():
    print(f"‚ö†Ô∏è Sinh vi√™n v·ªõi ID {student_id} ƒë√£ t·ªìn t·∫°i! Kh√¥ng th·ªÉ ƒëƒÉng k√Ω l·∫°i.")
    conn.close()
else:
    # M·ªü webcam
    cap = cv2.VideoCapture(0)
    print("üì∏ Vui l√≤ng nh√¨n th·∫≥ng v√†o camera...")

    while True:
        ret, frame = cap.read()
        if not ret:
            print("‚ùå L·ªói khi m·ªü webcam!")
            break

        cv2.imshow("Qu√©t khu√¥n m·∫∑t", frame)
        key = cv2.waitKey(1) & 0xFF

        # Nh·∫•n 's' ƒë·ªÉ ch·ª•p ·∫£nh v√† l∆∞u
        if key == ord("s"):
            image_path = "project-03/data/temp.jpg"
            cv2.imwrite(image_path, frame)
            print("‚úÖ ·∫¢nh ƒë√£ ch·ª•p!")
            break

    cap.release()
    cv2.destroyAllWindows()

    # Load ·∫£nh v√† m√£ h√≥a khu√¥n m·∫∑t
    image = face_recognition.load_image_file(image_path)
    face_encodings = face_recognition.face_encodings(image)

    if len(face_encodings) > 0:
        encoding = face_encodings[0]
        encoding_blob = pickle.dumps(encoding)  # Chuy·ªÉn m√£ h√≥a sang d·∫°ng blob

        # L∆∞u th√¥ng tin v√†o database
        cursor.execute("INSERT INTO students (id, name) VALUES (?, ?)", (student_id, student_name))
        cursor.execute("INSERT INTO face_encodings (student_id, encoding) VALUES (?, ?)", (student_id, encoding_blob))

        conn.commit()
        print(f"‚úÖ Sinh vi√™n {student_name} (ID: {student_id}) ƒë√£ ƒëƒÉng k√Ω th√†nh c√¥ng!")

    else:
        print("‚ùå Kh√¥ng t√¨m th·∫•y khu√¥n m·∫∑t trong ·∫£nh! Vui l√≤ng th·ª≠ l·∫°i.")

conn.close()